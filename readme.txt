Программа решает СЛАУ методом Гаусса-Жордана с выбором главного элемента по строке.

Алгоритм:
0. Запишем расширенную матрицу системы.
1. Выбирем максимальный по модулю элемент i-той строки (на позиции m) матрицы (матрицы коэффициентов).
2. Если максимальный по модулю элемент 0 и значение i-того уравнения системы не 0, то система несовместна (КА);
   иначе если максимальный по модулю элемент 0 и значение i-того уравнения системы 0, то данная линейная комбинация ЛЗ, переход в 1 (но при (i = i + 1)).
3. Меняем i-тый столбец с m-тым столбцом местами. (все предыдущие столбцы до i-го содержат 0 на i-той строке) (запомним соответствующие позиции X до перестановки).
4. Делим все элементы i-той строки на выбранный максимальный по модулю элемент (уже на i-той позиции) (нормолизация).
5. Из всех j-ых строк вычитаем i-ую строку домноженную на первый не нулевой элемент j-той строки, где (j != i).
6. Повторяя процесс n раз получим единичную матрицу. Расставим элементы вектора значений в правильным порядке
   (пользуясь знаниями о позициях X (см 3.)) получим значения X. (КА)

Программа предоставляет интерфейс для командной строки в качестве основного
интерфейса взоимодействия.

Командный интерфейс поддерживает входные данные в следующем виде:

lss [input] [output] [options...]

Где input - входной файл, output - выходной файл.

Поддерживаются следующие флаги:
-e - Выводить информацию об ошибках
-p - Распечатать исходную матрицу
-d - Выводить сообщения отладки
-t - Выводить время работы программы
-h, -? - Выводить инструкцию к применению

Коды ошибок программы:
0 - программа отработала без ошибок
1 - не существует решение для данной СЛАУ
12 - ошибка работы с файлами (файл не существует, невозможно открыть файл и т.д.)
13 - Не хватает входных данных
22 - Ошибка возвращается при проблеме обработки входных данных командной строки
	 (была подана неизвестная опция, слишком много аргументов было подано и т.д.)

## Публичный функции
### parse_argv
Функция обрабатывает входные данные программы (поданные через командный-интерфейс).

#### Возвращаемое значение:
Тип: `int`
Описание: код ошибки (`22`, если произошла ошибка при обрабоке входных данных, иначе `0`).

#### Входные параметры (аргументы функции):

`argc`
Тип: `int`
Описание: количество входных аргументов.

`argv`
Тип: `const char**`
Описание: входные аргументы

`help_flag`
Тип: `int*`
Описание: Если флаг `-h` или `-?` был установлен, то значение `1`.

`debug_flag`
Тип: `int*`
Описание: Если флаг `-d` был установлен, то значение `1`.

`error_flag`
Тип: `int*`
Описание: Если флаг `-e` был установлен, то значение `1`.

`matrix_flag`
Тип: `int*`
Описание: Если флаг `-p` был установлен, то значение `1`.


`trace_flag`
Тип: `int*`
Описание: Если флаг `-t` был установлен, то значение `1`.

`input`
Тип: `char**`
Описание: Если входной аргумент не флаг, то его значение помещается в `input`.

`output`
Тип: `char**`
Описание: Если входной аргумент не флаг, и `input` уже содержит значение, то его значение
помещается в `output`.


### lss_12_04
Функция решает СЛАУ методом Жордана-Гаусса, используя алгоритм описанный выше, ответ
помещается в входной параметр `X`. (позиции коэфициентов соответствующии `X`-ам хранятся
в массиве tmp).

#### Возвращаемое значение:
Тип: `int`
Описание: код ошибки (`1`, если решения не существует; `0` в случае разрешения СЛАУ)

#### Входные параметры (аргументы функции):
`n`
Тип: `int`
Описание: размерность системы

`A`
Тип: `double[]`
Описание: матрица коэффициентов

`B`
Тип: `double[]`
Описание: вектор свободных членов

`X`
Тип: `double[]`
Описание: вектор решений СЛАУ.

`tmp`
Тип: `double[]`
Описание: массив содержащий порядок X, используется при перестановке столбцов местами.

### lss_memsize_12_04
Функция возвращает число характеризующее количество памяти, которое нужно для вспомогательного
массива `tmp`, применяемого в функции `lss_12_04`

#### Входные параметры (аргументы функции):
`n`
Тип: `int`
Описание: Размер СЛАУ.

**ПРИМЕЧАНИЕ**: Описания приватных функций находятся в коде в виде комментария к функциям.
